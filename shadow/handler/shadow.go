// Code generated by protoc-gen-vkit.
// versions:
// - protoc-gen-vkit v1.0.0

package handler

import (
	context "context"
	"encoding/json"
	"fmt"

	"github.com/visonlv/go-vkit/errorsx"
	"github.com/visonlv/iot-engine/common/define"
	"github.com/visonlv/iot-engine/common/utils"
	"github.com/visonlv/iot-engine/shadow/model"
	pb "github.com/visonlv/iot-engine/shadow/proto"
)

type ShadowService struct {
}

func (the *ShadowService) Add(ctx context.Context, req *pb.ShadowAddReq, resp *pb.ShadowAddResp) error {
	bb, _ := json.Marshal(define.DefaultShadow())
	m := &model.ShadowModel{
		Sn:          req.Sn,
		Group:       utils.GetGroupId(req.Sn),
		Pk:          req.Pk,
		Shadow:      string(bb),
		LastVersion: 0,
	}

	err := model.ShadowAdd(nil, m)
	if err != nil {
		resp.Code = errorsx.FAIL.Code
		resp.Msg = fmt.Sprintf("添加影子失败 %s", err.Error())
		return nil
	}
	return nil
}

func (the *ShadowService) Del(ctx context.Context, req *pb.ShadowDelReq, resp *pb.ShadowDelResp) error {
	return nil
}

func (the *ShadowService) Update(ctx context.Context, req *pb.ShadowUpdateReq, resp *pb.ShadowUpdateResp) error {
	return nil
}

func (the *ShadowService) Get(ctx context.Context, req *pb.ShadowGetReq, resp *pb.ShadowGetResp) error {
	return nil
}

func (the *ShadowService) List(ctx context.Context, req *pb.ShadowListReq, resp *pb.ShadowListResp) error {
	return nil
}

func (the *ShadowService) Page(ctx context.Context, req *pb.ShadowPageReq, resp *pb.ShadowPageResp) error {
	return nil
}
